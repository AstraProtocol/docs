(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{434:function(a,t,s){"use strict";s.r(t);var e=s(62),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"astra-testnet-running-nodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#astra-testnet-running-nodes"}},[a._v("#")]),a._v(" Astra Testnet: Running Nodes")]),a._v(" "),s("p",[a._v("The latest https://astranaut.network/ EVM Chain Testnet has been named as "),s("strong",[a._v("Astra")]),a._v(".")]),a._v(" "),s("p",[a._v("This is a detailed documentation for setting up a Validator or a full node on Astra testnet "),s("code",[a._v("astra_11115-1")]),a._v(".")]),a._v(" "),s("h2",{attrs:{id:"pre-requisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pre-requisites"}},[a._v("#")]),a._v(" Pre-requisites")]),a._v(" "),s("h3",{attrs:{id:"supported-os"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#supported-os"}},[a._v("#")]),a._v(" Supported OS")]),a._v(" "),s("p",[a._v("We officially support macOS, Windows and Linux only. Other platforms may work but there is no guarantee.\nWe will extend our support to other platforms after we have stabilized our current architecture.")]),a._v(" "),s("h3",{attrs:{id:"prepare-your-machine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prepare-your-machine"}},[a._v("#")]),a._v(" Prepare your machine")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("To run Astra testnet nodes, you will need a machine with the following minimum requirements:")]),a._v(" "),s("ul",[s("li",[a._v("4-core, x86_64/ARM architecture processor;")]),a._v(" "),s("li",[a._v("16 GB RAM;")]),a._v(" "),s("li",[a._v("500 GB of storage space.")])])])]),a._v(" "),s("h2",{attrs:{id:"step-1-installation-astra"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-1-installation-astra"}},[a._v("#")]),a._v(" Step 1. Installation astra")]),a._v(" "),s("h2",{attrs:{id:"install-go"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-go"}},[a._v("#")]),a._v(" Install Go")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[a._v("Astra is built using "),s("a",{attrs:{href:"https://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Go"),s("OutboundLink")],1),a._v(" version "),s("code",[a._v("1.17.5+")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("go version\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[a._v("If the "),s("code",[a._v("astrad: command not found")]),a._v(" error message is returned, confirm that your "),s("a",{attrs:{href:"https://golang.org/doc/gopath_code#GOPATH",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("GOPATH")]),s("OutboundLink")],1),a._v(" is correctly configured by running the following command:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("go "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("env")]),a._v(" GOPATH"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("/bin\n")])])])]),a._v(" "),s("h2",{attrs:{id:"install-binaries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-binaries"}},[a._v("#")]),a._v(" Install Binaries")]),a._v(" "),s("h3",{attrs:{id:"github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[a._v("#")]),a._v(" GitHub")]),a._v(" "),s("p",[a._v("Clone and build using "),s("code",[a._v("git")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/AstraProtocol/astra.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" astra\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout v1.0.0\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),s("p",[a._v("Check that have been successfully installed:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("astrad version\n")])])]),s("h2",{attrs:{id:"step-2-configure-astrad"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-configure-astrad"}},[a._v("#")]),a._v(" Step 2. Configure "),s("code",[a._v("astrad")])]),a._v(" "),s("h3",{attrs:{id:"step-2-0-optional-clean-up-the-old-blockchain-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-0-optional-clean-up-the-old-blockchain-data"}},[a._v("#")]),a._v(" Step 2-0 (Optional) Clean up the old blockchain data")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("If you have joined "),s("code",[a._v("astra_11115-1")]),a._v(" before, you would have to clean up the old blockchain data and start over again, it can be done by running:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ astrad unsafe-reset-all\n")])])]),s("p",[a._v("and remove the old genesis file by")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" ~/.astrad/config/genesis.json\n")])])])])]),a._v(" "),s("p",[a._v("Before kick-starting your node, we will have to configure your node so that it connects to the Astra testnet:")]),a._v(" "),s("h3",{attrs:{id:"step-2-1-initialize-astrad"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-1-initialize-astrad"}},[a._v("#")]),a._v(" Step 2-1 Initialize "),s("code",[a._v("astrad")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("First of all, you can initialize astrad by:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("  $ astrad init "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("moniker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" --chain-id astra_11115-1\n")])])]),s("p",[a._v("This "),s("code",[a._v("moniker")]),a._v(" will be the displayed id of your node when connected to the Astra network.\nWhen providing the moniker value, make sure you drop the square brackets since they are not needed.\nThe example below shows how to initialize a node named "),s("code",[a._v("pegasus-node")]),a._v(" :")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("  $ astrad init pegasus-node --chain-id astra_11115-1\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"step-2-2-configure-astrad"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-2-configure-astrad"}},[a._v("#")]),a._v(" Step 2-2 Configure astrad")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("Download and replace the Astra Testnet "),s("code",[a._v("genesis.json")]),a._v(" by:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" https://raw.githubusercontent.com/AstraProtocol/testnets/main/astra_11115-1/genesis.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" ~/.astrad/config/genesis.json\n")])])])]),a._v(" "),s("li",[s("p",[a._v("Verify sha256sum checksum of the downloaded "),s("code",[a._v("genesis.json")]),a._v(". You should see "),s("code",[a._v("OK!")]),a._v(" if the sha256sum checksum matches.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("sha256sum ~/.astrad/config/genesis.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print $1}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ac410dae4fe3392aec20fe81467b01de366ff78bed12c4d9911395dc15a5cee0"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"OK"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MISMATCHED"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nOK"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("NOTE")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("For Mac environment, "),s("code",[a._v("sha256sum")]),a._v(" was not installed by default. In this case, you may setup "),s("code",[a._v("sha256sum")]),a._v(" with this command:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("sha256sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" shasum -a "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("256")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" -f sha256sum\n")])])]),s("p",[a._v(":::")])])])])]),a._v(" "),s("li",[s("p",[a._v("(Validator node only) In "),s("code",[a._v("~/.astrad/config/app.toml")]),a._v(", update minimum gas price to avoid "),s("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/4527",target:"_blank",rel:"noopener noreferrer"}},[a._v("transaction spamming"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" -i.bak -E "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s#^(minimum-gas-prices[[:space:]]+=[[:space:]]+).*$#\\1\"0.0001aastra\"#'")]),a._v(" ~/.astrad/config/app.toml\n")])])])]),a._v(" "),s("li",[s("p",[a._v("For network configuration, in "),s("code",[a._v("~/.astrad/config/config.toml")]),a._v(", validator nodes need to modify the configurations of "),s("code",[a._v("seeds")]),a._v(". For non-validator full nodes, only "),s("code",[a._v("seeds")]),a._v(" modification is required:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" -i.bak -E "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s#^(seeds[[:space:]]+=[[:space:]]+).*$#\\1\"8b09732e7ad86f7fbc44cd2a19a02147a6eb2501@34.142.195.19:26656,1d394cbab184b4c53806be8c8930b770ac1e81e7@159.223.36.174:26656,97e70c4328d6446aa0bfd987323655aba320d41f@52.221.184.171:26656\"#'")]),a._v(" ~/.astrad/config/config.toml\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" -i.bak -E "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s#^(timeout_commit[[:space:]]+=[[:space:]]+).*$#\\1\"2s\"#'")]),a._v(" ~/.astrad/config/config.toml\n")])])])])]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("NOTE")]),a._v(" "),s("ul",[s("li",[a._v("For Mac environment, if "),s("code",[a._v("jq")]),a._v(" is missing, you may install it by: "),s("code",[a._v("brew install jq")])])])]),a._v(" "),s("h2",{attrs:{id:"step-3-run-everything"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-3-run-everything"}},[a._v("#")]),a._v(" Step 3. Run everything")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("CAUTION")]),a._v(" "),s("p",[a._v("This page only shows the minimal setup for validator / full node.")]),a._v(" "),s("p",[a._v("Furthermore, you may want to run full nodes\nas sentries (see "),s("a",{attrs:{href:"https://docs.tendermint.com/master/tendermint-core/running-in-production.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Tendermint"),s("OutboundLink")],1),a._v("), restrict your validator connections to only connect to your full nodes, test secure storage of validator keys etc.")])]),a._v(" "),s("h3",{attrs:{id:"step-3-1-create-a-new-key-and-address-validator-node-only"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-3-1-create-a-new-key-and-address-validator-node-only"}},[a._v("#")]),a._v(" Step 3-1. Create a new key and address (Validator node only)")]),a._v(" "),s("p",[a._v("Run the followings to create a new key. For example, you can create a key with the name Default by:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("astrad keys "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" Default\n")])])]),s("p",[a._v("You should obtain an address with astra prefix, e.g. astra100esvggwlelc5zmx9qp6f6xpyhkqvuzn9fpkw6. This will be the address for performing transactions.")]),a._v(" "),s("h3",{attrs:{id:"step-3-2-run-everything"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-3-2-run-everything"}},[a._v("#")]),a._v(" Step 3-2. Run everything")]),a._v(" "),s("p",[a._v("Once the "),s("code",[a._v("astrad")]),a._v(" has been configured, we are ready to start the node and sync the blockchain data:")]),a._v(" "),s("ul",[s("li",[a._v("Start astrad, e.g.:")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("  $ astrad start\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("Remarks:")]),a._v(" "),s("p",[a._v("If you see errors saying "),s("code",[a._v("too many files opened...")]),a._v(", then you need to set a higher number for maximum open file descriptors in your OS.")]),a._v(" "),s("p",[a._v("If you are on OSX or Linux, then the following could be useful:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Check current max fd")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("ulimit")]),a._v(" -n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Set a new max fd")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("ulimit")]),a._v(" -Sn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("NEW_MAX_FILE_DESCRIPTOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Example")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("ulimit")]),a._v(" -Sn "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v("\n")])])])]),a._v(" "),s("ul",[s("li",[s("em",[a._v("(Optional for Linux)")]),a._v(" Start astrad with systemd service, e.g.:")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("  $ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -s https://raw.githubusercontent.com/AstraProtocol/docs/main/systemd/create-service.sh -o create-service.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -s https://raw.githubusercontent.com/AstraProtocol/docs/main/systemd/astrad.service.template -o astrad.service.template\n  $ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x ./create-service.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" ./create-service.sh\n  $ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start astrad\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# view log")]),a._v("\n  $ journalctl -u astrad -f\n")])])]),s("p",[a._v("If you have messaged")]),a._v(" "),s("p",[s("code",[a._v("No journal files were found.")])]),a._v(" "),s("p",[a._v("Edit journald.conf")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" /etc/systemd/journald.conf\n")])])]),s("p",[a._v("Original Config")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Journal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#Storage=auto")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),s("p",[a._v("New Config")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Journal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Storage")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("volatile\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),s("p",[a._v("After a restart of journalctl, all users could view their respective logs:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart systemd-journald\n")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("Example: /etc/systemd/system/astrad.service created by script")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# /etc/systemd/system/astrad.service")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Unit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Astra Node\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("After")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("network.target\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("simple\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("User")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("root\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("WorkingDirectory")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/root\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ExecStart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/root/go/bin/astrad start\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Restart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("on-failure\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("RestartSec")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LimitNOFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v("\n\n")])])])]),a._v(" "),s("p",[a._v("It should begin fetching blocks from the other peers. Please wait until it is fully synced before moving onto the next step.")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("You can query the node syncing status by")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ astrad status "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("&1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'.SyncInfo.catching_up'")]),a._v("\n")])])]),s("p",[a._v("If the above command returns "),s("code",[a._v("false")]),a._v(", It means that your node "),s("strong",[a._v("is fully synced")]),a._v("; otherwise, it returns "),s("code",[a._v("true")]),a._v(" and implies your node is still catching up.")])]),a._v(" "),s("li",[s("p",[a._v("You can check your node's progress (in terms of block height) by")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ astrad status "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("&1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" jq "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'.SyncInfo.latest_block_height'")]),a._v("\n\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"step-4-joining-the-network-as-a-validator-send-a-create-validator-transaction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-4-joining-the-network-as-a-validator-send-a-create-validator-transaction"}},[a._v("#")]),a._v(" Step 4. Joining the network as a validator: Send a create-validator transaction")]),a._v(" "),s("p",[a._v("Once the node is synced, we are now ready to send a create-validator transaction and join the network, for example:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("  $ astrad tx staking create-validator  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--amount"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1250astra "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--pubkey"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("astrad tendermint show-validator"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--moniker"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("moon "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--chain-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("astra_11115-1  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--commission-rate"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.056"')]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--commission-max-rate"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.125"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--commission-max-change-rate"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.01"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--min-self-delegation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"10000000"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--gas"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1000000"')]),a._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--gas-prices"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"25aastra"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t--from"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your_key"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("You will be required to insert the following:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("--from")]),a._v(": The "),s("code",[a._v("astra...")]),a._v(" address or the key name that holds your funds for initial delegation;")]),a._v(" "),s("li",[s("code",[a._v("--amount")]),a._v(": The amount of self-delegation provided to the validator as an initial staking;")]),a._v(" "),s("li",[s("code",[a._v("--pubkey")]),a._v(": The validator public key;")]),a._v(" "),s("li",[s("code",[a._v("--moniker")]),a._v(": A moniker (name) for your validator node;")]),a._v(" "),s("li",[s("code",[a._v("--security-contact")]),a._v(": Security contact email/contact method, it is "),s("strong",[a._v("strongly recommended")]),a._v(" to provide an email address for receiving important messages related to validator operation in the future;")]),a._v(" "),s("li",[s("code",[a._v("--chain-id=")]),a._v(": The chain-id of astra testnet/mainnet")]),a._v(" "),s("li",[s("code",[a._v("--commission-rate")]),a._v(": The commission rate charge on the delegator;")]),a._v(" "),s("li",[s("code",[a._v("--commission-max-rate")]),a._v(": The upper bound of the commission rate;")]),a._v(" "),s("li",[s("code",[a._v("--commission-max-change-rate")]),a._v(": The maximum daily increase of the validator commission. Please note this parameter cannot be changed after create-validator is processed;")]),a._v(" "),s("li",[s("code",[a._v("--min-self-delegation")]),a._v(": The lower threshold of validator's self-delegation amount, if the self-delegation drops below this number, all staked funds to the validator will be automatically unbonded and the validator will be inactive.")])])]),a._v(" "),s("h3",{attrs:{id:"step-4-1-check-your-validator-status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-4-1-check-your-validator-status"}},[a._v("#")]),a._v(" Step 4.1. Check your validator status")]),a._v(" "),s("p",[a._v("Once the "),s("code",[a._v("create-validator")]),a._v(" transaction completes, you can check if your validator has been added to the validator set:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ astrad tendermint show-address\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## [astravalcons... address] ##")]),a._v("\n$ astrad query tendermint-validator-set "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" -c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("astravalcons"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 1 = Yes; 0 = Not yet added ##")]),a._v("\n")])])]),s("h2",{attrs:{id:"astra-testnet-faucet-and-explorer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#astra-testnet-faucet-and-explorer"}},[a._v("#")]),a._v(" Astra testnet faucet and explorer")]),a._v(" "),s("ul",[s("li",[a._v("You can lookup data within the "),s("code",[a._v("astra_11115-1")]),a._v(" network by the "),s("a",{attrs:{href:"https://ping.astranaut.dev/astra",target:"_blank",rel:"noopener noreferrer"}},[a._v("explorer"),s("OutboundLink")],1),a._v(";")])])])}),[],!1,null,null,null);t.default=n.exports}}]);